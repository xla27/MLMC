%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: Hypersonic flow of air-11 over a 15-45° double wedge       %
% Author: Nicolò Sarman                                                        %
% Institution: Politecnico di Milano                                           %
% Date: 25/05/2024                                                             %
% File Version 8.0.1 "Harrier"                                                 %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ---------------- MESH ADAPTATION PARAMETERS -------------------%
% Type of sensor used for adaptation (GOAL (adjoint-based), MACH, PRESSURE, 
%                                     TEMPERATURE, ENERGY, DENSITY)
% N.B. The objective function for GOAL is specified by OBJECTIVE_FUNCTION
ADAP_SENSOR= MACH
%
% Numerical method for Hessian computation (GREEN_GAUSS)
NUM_METHOD_HESS= GREEN_GAUSS
%
% Maximum cell size for adaptation
ADAP_HMAX= 5E-1
%
% Maximum aspect ratio of the cell
ADAP_ARMAX= 1E6
%
% Minimum cell size for adaptation
ADAP_HMIN= 1e-9
%
% Cell size gradation factor (typically 1.2-1.8)
ADAP_HGRAD= 1.2
%
% Norm used for adaptation
% 1.0 or 2.0 recommended for inviscid flows
% 4.0 recommeneded for viscid
%
ADAP_NORM= 1.0
%
% Approximate mesh size (NPOI) at each level
ADAP_SIZES= (13000)
%
% Number of adaptations performed at each level
ADAP_SUBITER= (0)
%
%
% CFL number of the flow solver at each level
ADAP_FLOW_CFL= (0.2)

% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,
%                               POISSON_EQUATION)
SOLVER= NEMO_EULER
%
% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT)
MATH_PROBLEM= DIRECT
%
% Restart solution (NO, YES)
RESTART_SOL= NO

% ---- NONEQUILIBRIUM GAS, IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%
%
FLUID_MODEL= MUTATIONPP
GAS_MODEL= air_11
% (e- N+ O+ NO+ N2+ O2+ N O NO N2 O2)
GAS_COMPOSITION= (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.79, 0.21)

FROZEN_MIXTURE= NO

% ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%
%
% Mach number (non-dimensional, based on the free-stream values)
MACH_NUMBER= 9.0
%
% Angle of attack (degrees)
AOA= 0.0
%
% Side-slip angle (degrees)
SIDESLIP_ANGLE= 0.0
%
% Free-stream pressure (101325.0 N/m^2 by default, only Euler flows)  
FREESTREAM_PRESSURE= 390.0
%
% Free-stream temperature (288.15 K by default)
FREESTREAM_TEMPERATURE= 1000.0
FREESTREAM_TEMPERATURE_VE= 1000.0
% 
% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference length for pitching, rolling, and yawing non-dimensional moment
REF_LENGTH= 0.55 
%
% Reference area for force coefficients (0 implies automatic calculation)
REF_AREA= 0.55 

% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Euler wall boundary marker(s) (NONE = no marker)
MARKER_EULER= ( Wall )
MARKER_SYM= ( Symmetry )
MARKER_FAR = ( Farfield ) 
%
MARKER_SUPERSONIC_OUTLET= ( Outlet )
%
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING= ( Symmetry, Wall )
%
% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= ( Wall )

% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, 
%                                         WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES
%
% Courant-Friedrichs-Lewy condition of the finest grid
CFL_NUMBER= 0.2
%
% Adaptive CFL number (NO, YES)
CFL_ADAPT= YES
%
% Parameters of the adaptive CFL number (factor-down, factor-up, CFL min value,
%                                        CFL max value, acceptable linear solver convergence)
CFL_ADAPT_PARAM= ( 1E-2, 1.01, 0.05, 0.4)
%

% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,
%                              TURKEL_PREC, MSW)
CONV_NUM_METHOD_FLOW= AUSM
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the flow equations.
%           Required for 2nd order upwind schemes (NO, YES)
MUSCL_FLOW= NO
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_EXPLICIT

% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
% Convergence criteria (CAUCHY, RESIDUAL)
CONV_FIELD= REL_RMS_ENERGY
%
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -8
%
% Start convergence criteria at iteration number
CONV_STARTITER= 10
%
ITER= 1000000

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
% Mesh input file
MESH_FILENAME= mesh.su2
%
% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= SU2
%
% Mesh output file
MESH_OUT_FILENAME= mesh_out.su2
%
% Restart flow input file
SOLUTION_FILENAME= solution_flow.dat
%
% Restart adjoint input file
SOLUTION_ADJ_FILENAME= solution_adj.dat
%
% Output tabular format (CSV, TECPLOT)
TABULAR_FORMAT= CSV
%
% Output file convergence history (w/o extension) 
CONV_FILENAME= history
%
% Output file restart flow
RESTART_FILENAME= restart_flow.dat
%
% Output file restart adjoint
RESTART_ADJ_FILENAME= restart_adj.dat
%
% Output file flow (w/o extension) variables
VOLUME_FILENAME= flow
%
% Output file adjoint (w/o extension) variables
VOLUME_ADJ_FILENAME= adjoint
%
% Output objective function gradient (using continuous adjoint)
GRAD_OBJFUNC_FILENAME= of_grad.dat
%
% Output file surface flow coefficient (w/o extension)
SURFACE_FILENAME= surface_flow
%
% Output file surface adjoint coefficient (w/o extension)
SURFACE_ADJ_FILENAME= surface_adjoint
%
% Screen output
SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_ENERGY, LIFT, DRAG, AVG_CFL)
HISTORY_OUTPUT = (INNER_ITER, WALL_TIME, RMS_ENERGY, LIFT, DRAG, AVG_CFL)
OUTPUT_FILES = (SURFACE_CSV, RESTART, PARAVIEW)
%
SCREEN_WRT_FREQ_INNER= 1000
HISTORY_WRT_FREQ_INNER= 1000
OUTPUT_WRT_FREQ= 1000